two groups:

BEAAPI:

(1) Request  (only a dictionary nested inside another dictionary)

   for x in j['BEAAPI']['Request']['RequestParam']: print(x)
   {'ParameterName': 'TABLENAME', 'ParameterValue': 'T10101'}
   {'ParameterName': 'FREQUENCY', 'ParameterValue': 'Q'}
   {'ParameterName': 'METHOD', 'ParameterValue': 'GETDATA'}
   {'ParameterName': 'USERID', 'ParameterValue': '1E38CF84-302B-40D2-8823-62BE61CBB853'}
   {'ParameterName': 'PARAMETERNAME', 'ParameterValue': 'TABLEID'}
   {'ParameterName': 'YEAR', 'ParameterValue': 'X'}
   {'ParameterName': 'DATASETNAME', 'ParameterValue': 'NIPA'}
   {'ParameterName': 'DATABASENAME', 'ParameterValue': 'NIPA'}
   {'ParameterName': 'RESULTFORMAT', 'ParameterValue': 'JSON'}
   {'ParameterName': 'ShowMillions', 'ParameterValue': 'N'}

(2) Results
   dict_keys(['Statistic', 'UTCProductionTime', 'Dimensions', 'Data', 'Notes'])

   j['BEAAPI']['Results']['Statistic']    'NIPA Table'
   j['BEAAPI']['Results']['UTCProductionTime']    '2019-04-27T02:16:12.690'
   for x in j['BEAAPI']['Results']['Dimensions']: print(x)
     {'Ordinal': '1', 'Name': 'TableName', 'DataType': 'string', 'IsValue': '0'}
     {'Ordinal': '2', 'Name': 'SeriesCode', 'DataType': 'string', 'IsValue': '0'}
     {'Ordinal': '3', 'Name': 'LineNumber', 'DataType': 'numeric', 'IsValue': '0'}
     {'Ordinal': '4', 'Name': 'LineDescription', 'DataType': 'string', 'IsValue': '0'}
     {'Ordinal': '5', 'Name': 'TimePeriod', 'DataType': 'string', 'IsValue': '0'}
     {'Ordinal': '6', 'Name': 'CL_UNIT', 'DataType': 'string', 'IsValue': '0'}
     {'Ordinal': '7', 'Name': 'UNIT_MULT', 'DataType': 'numeric', 'IsValue': '0'}
     {'Ordinal': '8', 'Name': 'METRIC_NAME', 'DataType': 'string', 'IsValue': '0'}
     {'Ordinal': '9', 'Name': 'DataValue', 'DataType': 'numeric', 'IsValue': '1'}

    j['BEAAPI']['Results']['Notes'][0]
      'NoteRef': 'T10101'
      'NoteText': 'Table 1.1.1. Percent Change From Preceding Period in Real Gross Domestic Product [Percent] - LastRevised: April 26, 2019'}

    j['BEAAPI']['Results']['Data'][0].keys()
       dict_keys(['TableName', 'SeriesCode', 'LineNumber', 'LineDescription', 'TimePeriod', 'METRIC_NAME', 'CL_UNIT', 'UNIT_MULT', 'DataValue'])




for x in´´´ beaHistRaw[0]['data']:

    #Data
    if x not 'Contents':



